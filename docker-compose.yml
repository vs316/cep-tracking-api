services:
  nestjs-app:
    image: vs316/cep-tracking-api-nestjs-app:latest # Use the image from Docker Hub
    container_name: nestjs-app
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    #   target: producti
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=mysql://root:admin@mysql-db:3306/cep_tracking # Use container name as host
      - FRONTEND_URL=http://localhost:3001
      - ALLOWED_ORIGINS=http://localhost:3001,http://localhost:4173,http://localhost:5173
    ports:
      - '3100:3000'
    stdin_open: true
    tty: true
    volumes:
      - .:/app
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - internal
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
    logging:
      driver: json-file
      options:
        max-size: '10m'
        max-file: '3'

  mysql-db:
    container_name: mysql-db
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: cep_tracking
      MYSQL_ROOT_HOST: '%'
    ports:
      - '3307:3306'
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - internal
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin
    depends_on:
      - mysql-db
    restart: unless-stopped
    environment:
      PMA_HOST: mysql-db
      MYSQL_ROOT_PASSWORD: admin
    ports:
      - '8087:80'
    networks:
      - internal

volumes:
  db_data:
    driver: local
networks:
  internal:
    driver: bridge
