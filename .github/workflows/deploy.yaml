name: CI Pipeline

on:
  push:
    paths:
      - '**'
    branches:
      - main
  workflow_dispatch: # Allows manual trigger of the workflow

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          clean: true
          fetch-depth: 1
          persist-credentials: false
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'
      # Step 2: Cache Node.js Dependencies
      - name: Cache Node.js Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Step 3: Install Dependencies
      - name: Install Dependencies
        run: npm ci

      # Step 4: Run Linter
      - name: Run ESLint
        run: npm run lint

      # Step 5: Run Tests
      - name: Run Tests
        run: npm run test

      # Step 6: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 7: Log in to Docker Hub
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 8: Build and push Docker image
      - name: Build and Push Docker Image
        run: |
          docker buildx build --platform linux/amd64 -t vs316/cep-tracking-api-nestjs-app:latest --push .

      # Step 9: Restart Docker Compose Stack
      - name: Restart Docker Compose Stack
        run: |
          set -e
          docker compose -f ./docker-compose.yml pull nestjs-app
          docker compose -f ./docker-compose.yml up -d --no-deps nestjs-app
